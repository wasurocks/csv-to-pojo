{{#models}}
{{#model}}
package {{packageName}};

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Schema(name = "{{classname}}", description = "{{description}}")
public class {{classname}} {

{{#vars}}
    @Schema(
        description = "{{#required}}Mandatory. {{/required}}{{^required}}Optional. {{/required}}{{{description}}}"{{#example}},
        example = "{{example}}"{{/example}},
        requiredMode = Schema.RequiredMode.{{#required}}REQUIRED{{/required}}{{^required}}NOT_REQUIRED{{/required}}
    )
    @JsonProperty("{{baseName}}")
    {{#required}}
        {{#isNumeric}}
    @NotNull(message = "must not be null")
    @Positive(message = "must be greater than 0")
        {{/isNumeric}}
        {{#isString}}
    @NotBlank(message = "must not be null or empty")
        {{/isString}}
    {{/required}}
    {{#isString}}
        {{#maxLength}}
    @Size(max = {{maxLength}}, message = "length must not exceed {{maxLength}} characters")
        {{/maxLength}}
        {{#pattern}}
    @Pattern(regexp = "{{pattern}}", message = "{{patternMessage}}")
        {{/pattern}}
    {{/isString}}
    {{#isDate}}
    @Pattern(regexp = "^\\d{4}-\\d{2}-\\d{2}$", message = "Date must be in the format yyyy-MM-dd")
    {{/isDate}}
    {{#isModel}}
    @Valid
    {{#required}}
    @NotNull(message = "must not be null")
    {{/required}}
    {{/isModel}}
    private {{datatype}} {{name}};

{{/vars}}
}
{{/model}}
{{/models}}
